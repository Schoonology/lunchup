#!/usr/bin/env node
var fs = require('fs')
var path = require('path')
var csv = require('csv')
var debug = require('debug')('lunchup')
var minimist = require('minimist')
var through = require('through')
var LunchUp = require('../lib/lunchup')
var self = new LunchUp()
var argv = minimist(process.argv.slice(2))
var groupSize = argv._[0]
var inputCsv = argv._[1]
var inputStream = process.stdin

if (inputCsv) {
  inputStream = fs.createReadStream(path.resolve(process.cwd(), inputCsv))
}

function createLoadTransform(lunchup) {
  var records = []

  return through(
    function addRecord(record) {
      records.push(record)
    },
    function computeGroups() {
      lunchup.addData(records)
    }
  )
}

inputStream
  .pipe(csv.parse({
    comment: '#',
    skip_empty_lines: true,
    trim: true
  }))
  .pipe((function () {
    var records = []

    return through(
      function addRecord(record) {
        records.push(record)
      },
      function computeGroups() {
        var stream = this

        self.addData(records)

        self
          .generateGroups(groupSize)
          .forEach(function (row) {
            stream.emit('data', row)
          })

        stream.emit('end')
      }
    )
  }()))
  .pipe(csv.stringify())
  .pipe(process.stdout)
